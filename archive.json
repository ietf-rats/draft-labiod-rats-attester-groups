{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2025-07-13T01:49:48.403791+00:00",
  "repo": "ietf-rats/draft-labiod-rats-attester-groups",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDONAKkNs6dpRKe",
      "title": "Use Case #3",
      "url": "https://github.com/ietf-rats/draft-labiod-rats-attester-groups/pull/1",
      "state": "MERGED",
      "author": "henkbirkholz",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "A lot of fixed lint in the beginning. The core change starts in L144 green.",
      "createdAt": "2025-07-06T17:19:35Z",
      "updatedAt": "2025-07-07T17:44:09Z",
      "baseRepository": "ietf-rats/draft-labiod-rats-attester-groups",
      "baseRefName": "main",
      "baseRefOid": "99eaa086f981d3408af83872b4ecddccd9a30d73",
      "headRepository": "ietf-rats/draft-labiod-rats-attester-groups",
      "headRefName": "collab-for-04",
      "headRefOid": "2329bc2e9053e95448cf537e9c3949338dcbd656",
      "closedAt": "2025-07-07T17:44:09Z",
      "mergedAt": "2025-07-07T17:44:09Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "354b1339c24fad6fca9f39361a63b14ee5ada4e3"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDONAKkNs6ycW2f",
          "commit": {
            "abbreviatedOid": "f4c63de"
          },
          "author": "hlabiod",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "Line 161: update th text\r\nAccording to the dynamic requirements of computing task functions, performance, and to the trustworthy state changes of member nodes, the overall state of the group (including the state change of each existing node, the exit of the existing node from the group, the addition of a new node to the group, the replacement of the existing node by the new node, etc.) is dynamic. These dynamic changes lead to the need for real-time dynamic update of group remote attestation. Incremental update should also be supported to reduce communication and computing load in large groups. \r\n\r\n162 . update the text \r\nIn the process of attester group, the client can not only integrate the communication key negotiation with the master node, but also support the communication key negotiation with other nodes in the group. Therefore, the key negotiation material is required to be generated by the client and different nodes separately. In addition, each group node that need to communicate can calculate the session key for mutual communication, so as to implement the subsequent establishment of the security channel.\r\n\r\n",
          "createdAt": "2025-07-07T13:07:22Z",
          "updatedAt": "2025-07-07T13:07:22Z",
          "comments": []
        },
        {
          "id": "PRR_kwDONAKkNs6yciaY",
          "commit": {
            "abbreviatedOid": "f4c63de"
          },
          "author": "hlabiod",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-07-07T13:15:17Z",
          "updatedAt": "2025-07-07T13:15:17Z",
          "comments": []
        },
        {
          "id": "PRR_kwDONAKkNs6ye_b6",
          "commit": {
            "abbreviatedOid": "f4c63de"
          },
          "author": "henkbirkholz",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-07T16:02:07Z",
          "updatedAt": "2025-07-07T16:02:07Z",
          "comments": [
            {
              "originalPosition": 99,
              "body": "```suggestion\r\n-\tAccording to the dynamic requirements of computing task functions, performance, and to the trustworthy state changes of member nodes, the overall state of the group (including the state change of each existing node, the exit of the existing node from the group, the addition of a new node to the group, the replacement of the existing node by the new node, etc.) is dynamic. These dynamic changes lead to the need for real-time dynamic update of group remote attestation. Incremental update should also be supported to reduce communication and computing load in large groups.\r\n```",
              "createdAt": "2025-07-07T16:02:07Z",
              "updatedAt": "2025-07-07T16:02:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDONAKkNs6ye_7H",
          "commit": {
            "abbreviatedOid": "f4c63de"
          },
          "author": "henkbirkholz",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-07T16:02:50Z",
          "updatedAt": "2025-07-07T16:02:50Z",
          "comments": [
            {
              "originalPosition": 100,
              "body": "```suggestion\r\nIn the process of attester group, the client can not only integrate the communication key negotiation with the master node, but also support the communication key negotiation with other nodes in the group. Therefore, the key negotiation material is required to be generated by the client and different nodes separately. In addition, each group node that need to communicate can calculate the session key for mutual communication, so as to implement the subsequent establishment of the security channel.\r\n```",
              "createdAt": "2025-07-07T16:02:50Z",
              "updatedAt": "2025-07-07T16:02:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDONAKkNs6yfBem",
          "commit": {
            "abbreviatedOid": "f4c63de"
          },
          "author": "henkbirkholz",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-07T16:05:01Z",
          "updatedAt": "2025-07-07T16:05:02Z",
          "comments": [
            {
              "originalPosition": 86,
              "body": "```suggestion\r\nContext: An AI computing cluster is a composite computing environment composed of a group of computing nodes/chips on which one ore more computing tasks are executed.\r\n```",
              "createdAt": "2025-07-07T16:05:02Z",
              "updatedAt": "2025-07-07T16:05:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDONAKkNs6yfCM_",
          "commit": {
            "abbreviatedOid": "f4c63de"
          },
          "author": "henkbirkholz",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-07T16:06:08Z",
          "updatedAt": "2025-07-07T16:06:08Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "```suggestion\r\nChallenge: The cluster may contain heterogeneous trusted roots, and the composition may be dynamically updated. Repeated attestation is not efficient if done without context and can be very expensive.\r\n```",
              "createdAt": "2025-07-07T16:06:08Z",
              "updatedAt": "2025-07-07T16:06:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDONAKkNs6yfK22",
          "commit": {
            "abbreviatedOid": "f4c63de"
          },
          "author": "henkbirkholz",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-07T16:16:07Z",
          "updatedAt": "2025-07-07T16:16:07Z",
          "comments": [
            {
              "originalPosition": 92,
              "body": "```suggestion\r\nApproach: We can consider a large group of attesters or a set of group attesters. An attester group that maps to the nodes of a cluster that executes a specific task may be dynamically created or dissolved according to the requirements of the computing task. One ore more remote attestation server/verifier appraise collected evidence/measurements for the entire composite computing environment. The intend of remote group attestation is to hide the complexity of that back-end computing node interaction from customers (the Relying Parties), while still being able to assess its trustworthiness. Generally, a master node in the group is responsible for communicating with the Verifiers (or indirectly with the customer if they triggered remote attestation as a Relying Party), responding to the remote attestation challenge request of the client, collecting evidence claims of all group nodes as a whole, and sending the evidence to the verifier for appraisal.\r\n```",
              "createdAt": "2025-07-07T16:16:07Z",
              "updatedAt": "2025-07-07T16:16:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDONAKkNs6yfgvQ",
          "commit": {
            "abbreviatedOid": "f4c63de"
          },
          "author": "henkbirkholz",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-07T16:29:50Z",
          "updatedAt": "2025-07-07T16:29:50Z",
          "comments": [
            {
              "originalPosition": 94,
              "body": "```suggestion\r\nWhen all computing nodes/chips in a computing attester group are provided by the same vendor or deployed by the same cloud vendor, using a unified and centralized dedicated hardware root of trust can be considered (e.g., hardware security chip, centralized hardware DIE, or BMC) to offload important security functions (secure storage, security monitoring, etc.) to this independent root of trust module. The trusted boot and other related evidence claims of the group are securely stored on that unified root of trust. During the remote attestation procedure, the master node of the group collects claims aggregated and signed already as evidence by the centralized module. If a single root of trust manages multiple chips, a single point of failure (such as malicious intrusion and system breakdown) of the root of trust affects the security of the entire attester group managed by the root of trust. The unified trusted root should support distributed and pooled design. Multiple roots of trust may work together to enhance overall security and reliability.\r\n```",
              "createdAt": "2025-07-07T16:29:50Z",
              "updatedAt": "2025-07-07T16:29:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDONAKkNs6yflFh",
          "commit": {
            "abbreviatedOid": "f4c63de"
          },
          "author": "henkbirkholz",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-07T16:32:41Z",
          "updatedAt": "2025-07-07T16:32:41Z",
          "comments": [
            {
              "originalPosition": 94,
              "body": "I do not what a pooled design is.",
              "createdAt": "2025-07-07T16:32:41Z",
              "updatedAt": "2025-07-07T16:32:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDONAKkNs6yfnKz",
          "commit": {
            "abbreviatedOid": "f4c63de"
          },
          "author": "henkbirkholz",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-07T16:34:08Z",
          "updatedAt": "2025-07-07T16:34:08Z",
          "comments": [
            {
              "originalPosition": 94,
              "body": "The terms root of trust and module seem to interchangable and that might create confusion if they are perceived as different centralized components.",
              "createdAt": "2025-07-07T16:34:08Z",
              "updatedAt": "2025-07-07T16:34:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDONAKkNs6yfqQa",
          "commit": {
            "abbreviatedOid": "f4c63de"
          },
          "author": "henkbirkholz",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-07T16:36:54Z",
          "updatedAt": "2025-07-07T16:36:54Z",
          "comments": [
            {
              "originalPosition": 96,
              "body": "```suggestion\r\nIn heterogeneous interconnection scenarios where all computing nodes and chips in a computing cluster are provided by different vendors, it might not be possible to deploy a unified root of trust. During the group remote attestation procedure, the master node needs to communicate with each group node to collect its individual evidence claims. The node evidence is signed by the private attestation key of each node. The master node collects the information, packs the information, and sends it to the remote verifier for appraisal.\r\n```",
              "createdAt": "2025-07-07T16:36:54Z",
              "updatedAt": "2025-07-07T16:36:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDONAKkNs6yfrYW",
          "commit": {
            "abbreviatedOid": "f4c63de"
          },
          "author": "henkbirkholz",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-07T16:38:39Z",
          "updatedAt": "2025-07-07T16:38:39Z",
          "comments": [
            {
              "originalPosition": 98,
              "body": "```suggestion\r\n-\tCreation and dissolving of groups is dynamically triggered by the life cycle management of computing tasks the groups execute. The member scale, type, and quantity of evidence claims to be collected are dynamically generated and dynamically change. Before performing remote attestation, customers are required to dynamically obtain all related information through a management system interface. Based on this management information, a template-based remote attestation request message is defined and sent to the master node.\r\n```",
              "createdAt": "2025-07-07T16:38:39Z",
              "updatedAt": "2025-07-07T16:38:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDONAKkNs6yfsk8",
          "commit": {
            "abbreviatedOid": "f4c63de"
          },
          "author": "henkbirkholz",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-07T16:40:42Z",
          "updatedAt": "2025-07-07T16:40:42Z",
          "comments": [
            {
              "originalPosition": 99,
              "body": "```suggestion\r\n-\tAccording to the dynamic requirements of computing task functions, performance, and to the trustworthy state changes of member nodes, the overall state of the group (including the state change of each existing node, the exit of the existing node from the group, the addition of a new node to the group, the replacement of the existing node by the new node, etc.) is dynamic. These dynamic changes lead to the need for real-time dynamic update of group remote attestation. In this case, incremental update should be supported. That is, updating the measurement value of a single node does not cause the measurement of all or other nodes to be recollected and calculated, resulting in the increased communication and computing load. Especially, if the group size is large, these types of redundant evidence claims collections pose unnecessary load that can be avoided.\r\n```",
              "createdAt": "2025-07-07T16:40:42Z",
              "updatedAt": "2025-07-07T16:40:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDONAKkNs6yfv6h",
          "commit": {
            "abbreviatedOid": "f4c63de"
          },
          "author": "henkbirkholz",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-07T16:44:51Z",
          "updatedAt": "2025-07-07T16:44:51Z",
          "comments": [
            {
              "originalPosition": 100,
              "body": "```suggestion\r\nIn the process of group remote attestation, verifiers can not only conduct key negotiation with the master node, but also support the key negotiation with other nodes inside the group. Therefore, required key negotiation material has to be generated by the verifier and different nodes separately. In addition, the exchange is completed in the request message and result return message of the remote attestation, and the exchange is transmitted to the two ends of each communication session, so that the client and each group node that need to communicate can calculate the session key for mutual communication, so as to implement the subsequent establishment of the security channel.\r\n```\r\n\r\nTBH, I cannot follow most of this last paragraph. I am not sure what client means most of the time. It seems to be used interchangeably as verifier, relying party, or customer, which is quite confusing. ",
              "createdAt": "2025-07-07T16:44:51Z",
              "updatedAt": "2025-07-07T16:44:51Z"
            }
          ]
        }
      ]
    },
    {
      "number": 2,
      "id": "PR_kwDONAKkNs6dzcSy",
      "title": "some nits",
      "url": "https://github.com/ietf-rats/draft-labiod-rats-attester-groups/pull/2",
      "state": "MERGED",
      "author": "henkbirkholz",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "NO HTABs!",
      "createdAt": "2025-07-07T17:54:54Z",
      "updatedAt": "2025-07-07T17:55:52Z",
      "baseRepository": "ietf-rats/draft-labiod-rats-attester-groups",
      "baseRefName": "main",
      "baseRefOid": "354b1339c24fad6fca9f39361a63b14ee5ada4e3",
      "headRepository": "ietf-rats/draft-labiod-rats-attester-groups",
      "headRefName": "collab-for-04",
      "headRefOid": "6d7b6e20cbfd6c3a44e3815b24d9673ceed12505",
      "closedAt": "2025-07-07T17:55:52Z",
      "mergedAt": "2025-07-07T17:55:52Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "d5fa33319ff6a4608d2a194196a5c39793ea932c"
      },
      "comments": [],
      "reviews": []
    }
  ]
}